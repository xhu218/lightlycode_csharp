//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAndLoadTestProject
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;


    public class NavigateAndRegister : WebTest
    {

        public NavigateAndRegister()
        {
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }

            WebTestRequest request1 = new WebTestRequest("http://localhost:11576/");
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest("http://localhost:11576/lib/bootstrap/dist/fonts/glyphicons-halflings-regular.eot");
            request2.ThinkTime = 3;
            request2.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:11576/"));
            request2.QueryStringParameters.Add("", "", false, false);
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest("http://localhost:11576/Home/About");
            request3.ThinkTime = 1;
            request3.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:11576/"));
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest("http://localhost:11576/Home/Contact");
            request4.ThinkTime = 1;
            request4.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:11576/Home/About"));
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest("http://localhost:11576/");
            request5.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:11576/Home/Contact"));
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest("http://localhost:11576/lib/bootstrap/dist/fonts/glyphicons-halflings-regular.eot");
            request6.ThinkTime = 1;
            request6.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:11576/"));
            request6.QueryStringParameters.Add("", "", false, false);
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest("http://localhost:11576/Account/Register");
            request7.ThinkTime = 12;
            request7.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:11576/"));
            ExtractHiddenFields extractionRule1 = new ExtractHiddenFields();
            extractionRule1.Required = true;
            extractionRule1.HtmlDecode = true;
            extractionRule1.ContextParameterName = "1";
            request7.ExtractValues += new EventHandler<ExtractionEventArgs>(extractionRule1.Extract);
            yield return request7;
            request7 = null;

            WebTestRequest request8 = new WebTestRequest("http://localhost:11576/Account/Register");
            request8.Method = "POST";
            request8.ExpectedResponseUrl = "http://localhost:11576/";
            request8.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:11576/Account/Register"));
            FormPostHttpBody request8Body = new FormPostHttpBody();
            request8Body.FormPostParameters.Add("Email", "christian@christiannagel.com");
            request8Body.FormPostParameters.Add("Password", "Pa$$w0rd");
            request8Body.FormPostParameters.Add("ConfirmPassword", "Pa$$w0rd");
            request8Body.FormPostParameters.Add("__RequestVerificationToken", this.Context["$HIDDEN1.__RequestVerificationToken"].ToString());
            request8.Body = request8Body;
            yield return request8;
            request8 = null;

            WebTestRequest request9 = new WebTestRequest("http://localhost:11576/lib/bootstrap/dist/fonts/glyphicons-halflings-regular.eot");
            request9.Headers.Add(new WebTestRequestHeader("Referer", "http://localhost:11576/"));
            request9.QueryStringParameters.Add("", "", false, false);
            yield return request9;
            request9 = null;
        }
    }
}
